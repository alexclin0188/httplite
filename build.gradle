// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply from: 'config.gradle'

subprojects{
    apply from: "${project.rootDir}/config.gradle"
}

def httplite_version = project.ext.httpLiteVersion
def okhttp2_version = project.ext.httpLiteOkhttp2Version
def okhttp3_version = project.ext.httpLiteOkhttp3Version
def urlite_version = project.ext.httpLiteURLVersion
def libDir = 'build/libs'

task makeHttplite(type: Jar, dependsOn: ':httplite:build') {
    archiveName = 'httplite' +httplite_version+'.jar'
    from('httplite/build/intermediates/classes/release/')
    destinationDir = file(libDir)
    exclude('**/BuildConfig.class')
    exclude('**/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
    include('alexclin/httplite/**/*.class')
}

task makeHttpOk2Lib(type: Jar,dependsOn: ':httplite-okhttp2:build') {
    archiveName = 'httplite-ok2lite' +okhttp2_version+'.jar'
    from('httplite-okhttp2/build/intermediates/classes/release/')
    destinationDir = file(libDir)
    exclude('**/BuildConfig.class')
    exclude('**/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
    include('alexclin/httplite/**/*.class')
}

task makeHttpOk3Lib(type: Jar,dependsOn: ':httplite-okhttp3:build') {
    archiveName = 'httplite-ok3lite' +okhttp3_version+'.jar'
    from('httplite-okhttp3/build/intermediates/classes/release/')
    destinationDir = file(libDir)
    exclude('**/BuildConfig.class')
    exclude('**/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
    include('alexclin/httplite/**/*.class')
}

task makeHttpUrl(type: Jar,dependsOn: ':httplite-url:build') {
    archiveName = 'httplite-urlite' +urlite_version+'.jar'
    from('httplite-url/build/intermediates/classes/release/')
    destinationDir = file(libDir)
    exclude('**/BuildConfig.class')
    exclude('**/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
    include('alexclin/httplite/**/*.class')
}

task makeJar (dependsOn:[clean,makeHttplite,makeHttpOk2Lib,makeHttpOk3Lib,makeHttpUrl]){

}